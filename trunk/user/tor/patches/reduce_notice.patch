--- tor-0.4.8.18.orig/src/app/config/config.c
+++ tor-0.4.8.18/src/app/config/config.c
@@ -5904,7 +5904,7 @@
                "have a good reason.",
                fmt_addrport(&port->addr, port->port), portname);
     } else if (!tor_addr_is_loopback(&port->addr)) {
-      log_notice(LD_CONFIG, "You configured a non-loopback address '%s' "
+      log_info(LD_CONFIG, "You configured a non-loopback address '%s' "
                  "for %sPort. This allows everybody on your local network to "
                  "use your machine as a proxy. Make sure this is what you "
                  "wanted.",
--- tor-0.4.8.18.orig/src/app/main/main.c
+++ tor-0.4.8.18/src/app/main/main.c
@@ -588,7 +588,7 @@
                  tor_libc_get_name() : "Unknown",
                tor_libc_get_version_str());
 
-    log_notice(LD_GENERAL, "Tor can't help you if you use it wrong! "
+    log_info(LD_GENERAL, "Tor can't help you if you use it wrong! "
                "Learn how to be safe at "
                "https://support.torproject.org/faq/staying-anonymous/");
 
@@ -637,7 +637,7 @@
 
 #ifndef _WIN32
   if (geteuid()==0)
-    log_warn(LD_GENERAL,"You are running Tor as root. You don't need to, "
+    log_info(LD_GENERAL,"You are running Tor as root. You don't need to, "
              "and you probably shouldn't.");
 #endif
 
--- tor-0.4.8.18.orig/src/core/mainloop/mainloop.c
+++ tor-0.4.8.18/src/core/mainloop/mainloop.c
@@ -1137,7 +1137,7 @@
   if (!router_have_minimum_dir_info()) {
     int quiet = suppress_logs || from_cache ||
                 dirclient_too_idle_to_fetch_descriptors(options, now);
-    tor_log(quiet ? LOG_INFO : LOG_NOTICE, LD_DIR,
+    tor_log(LOG_INFO, LD_DIR,
         "I learned some more directory information, but not enough to "
         "build a circuit: %s", get_dir_info_status_string());
     update_all_descriptor_downloads(now);
--- tor-0.4.8.18.orig/src/core/or/circuitstats.c
+++ tor-0.4.8.18/src/core/or/circuitstats.c
@@ -1609,7 +1609,7 @@
 
   cbt_control_event_buildtimeout_set(cbt, BUILDTIMEOUT_SET_EVENT_RESET);
 
-  log_notice(LD_CIRC,
+  log_info(LD_CIRC,
             "Your network connection speed appears to have changed. Resetting "
             "timeout to %ldms after %d timeouts and %d buildtimes.",
             tor_lround(cbt->timeout_ms), timeout_count, total_build_times);
--- tor-0.4.8.18.orig/src/core/or/circuituse.c
+++ tor-0.4.8.18/src/core/or/circuituse.c
@@ -2301,7 +2301,7 @@
      * multihop circuits.
      */
     if (!connection_get_by_type(CONN_TYPE_DIR)) {
-      int severity = LOG_NOTICE;
+      int severity = LOG_INFO;
       /* Retry some stuff that might help the connection work. */
       /* If we are configured with EntryNodes or UseBridges */
       if (entry_list_is_constrained(options)) {
--- tor-0.4.8.18.orig/src/core/or/connection_edge.c
+++ tor-0.4.8.18/src/core/or/connection_edge.c
@@ -1201,7 +1201,7 @@
     conn = ENTRY_TO_EDGE_CONN(entry_conn);
     /* if it's an internal linked connection, don't yell its status. */
     severity = (tor_addr_is_null(&base_conn->addr) && !base_conn->port)
-      ? LOG_INFO : LOG_NOTICE;
+      ? LOG_INFO : LOG_INFO;
     seconds_idle = (int)( now - base_conn->timestamp_last_read_allowed );
     seconds_since_born = (int)( now - base_conn->timestamp_created );
 
--- tor-0.4.8.18.orig/src/core/or/relay.c
+++ tor-0.4.8.18/src/core/or/relay.c
@@ -1030,7 +1030,7 @@
             return 0;
           /* else, conn will get closed below */
         } else {
-          log_notice(LD_APP,
+          log_info(LD_APP,
                      "Have tried resolving or connecting to address '%s' "
                      "at %d different places. Giving up.",
                      safe_str(conn->socks_request->address),
--- tor-0.4.8.18.orig/src/feature/client/bridges.c
+++ tor-0.4.8.18/src/feature/client/bridges.c
@@ -907,7 +907,7 @@
     if (!tor_addr_is_null(&ri->ipv6_addr)) {
       tor_addr_port_t ap;
       node_get_pref_orport(node, &ap);
-      log_notice(LD_CONFIG,
+      log_info(LD_CONFIG,
                  "Bridge '%s' has both an IPv4 and an IPv6 address.  "
                  "Will prefer using its %s address (%s) based on %s.",
                  ri->nickname,
@@ -964,7 +964,7 @@
     if (!tor_addr_is_null(&rs->ipv6_addr)) {
       tor_addr_port_t ap;
       node_get_pref_orport(node, &ap);
-      log_notice(LD_CONFIG,
+      log_info(LD_CONFIG,
                  "Bridge '%s' has both an IPv4 and an IPv6 address.  "
                  "Will prefer using its %s address (%s) based on %s.",
                  rs->nickname,
@@ -1019,7 +1019,7 @@
       rewrite_node_address_for_bridge(bridge, node);
       if (tor_digest_is_zero(bridge->identity)) {
         memcpy(bridge->identity,ri->cache_info.identity_digest, DIGEST_LEN);
-        log_notice(LD_DIR, "Learned identity %s for bridge at %s:%d",
+        log_info(LD_DIR, "Learned identity %s for bridge at %s:%d",
                    hex_str(bridge->identity, DIGEST_LEN),
                    fmt_and_decorate_addr(&bridge->addr),
                    (int) bridge->port);
@@ -1028,7 +1028,7 @@
                               (const uint8_t*)ri->cache_info.identity_digest);
 
       if (desc_is_new)
-        log_notice(LD_DIR, "new bridge descriptor '%s' (%s): %s",
+        log_info(LD_DIR, "new bridge descriptor '%s' (%s): %s",
                    ri->nickname,
                    from_cache ? "cached" : "fresh", router_describe(ri));
       /* If we didn't have a reachable bridge before this one, try directory
--- tor-0.4.8.18.orig/src/feature/dirclient/dirclient.c
+++ tor-0.4.8.18/src/feature/dirclient/dirclient.c
@@ -500,7 +500,7 @@
         if (guard_state) {
           entry_guard_cancel(&guard_state);
         }
-        log_notice(LD_DIR, "Ignoring directory request, since no bridge "
+        log_info(LD_DIR, "Ignoring directory request, since no bridge "
                            "nodes are available yet.");
       }
 
--- tor-0.4.8.18.orig/src/feature/hs/hs_client.c
+++ tor-0.4.8.18/src/feature/hs/hs_client.c
@@ -305,7 +305,7 @@
   if (count > 0) {
     char onion_address[HS_SERVICE_ADDR_LEN_BASE32 + 1];
     hs_build_address(identity_pk, HS_VERSION_THREE, onion_address);
-    log_notice(LD_REND, "Closed %u streams for service %s.onion "
+    log_info(LD_REND, "Closed %u streams for service %s.onion "
                         "for reason %s. Fetch status: %s.",
                count, safe_str_client(onion_address),
                stream_end_reason_to_string(reason),
--- tor-0.4.8.18.orig/src/feature/nodelist/nodelist.c
+++ tor-0.4.8.18/src/feature/nodelist/nodelist.c
@@ -2645,7 +2645,7 @@
 
   if (old_have_consensus_path != have_consensus_path) {
     if (have_consensus_path == CONSENSUS_PATH_INTERNAL) {
-      log_notice(LD_NET,
+      log_info(LD_NET,
                  "The current consensus has no exit nodes. "
                  "Tor can only build internal paths, "
                  "such as paths to onion services.");
@@ -2655,7 +2655,7 @@
        * the network to build exit paths, such as paths for world wide web
        * browsing (as distinct from hidden service web browsing). */
     } else if (old_have_consensus_path == CONSENSUS_PATH_INTERNAL) {
-      log_notice(LD_NET,
+      log_info(LD_NET,
                  "The current consensus contains exit nodes. "
                  "Tor can build exit and internal paths.");
     }
