--- tor-0.4.8.18.orig/src/core/mainloop/mainloop.c
+++ tor-0.4.8.18/src/core/mainloop/mainloop.c
@@ -1137,7 +1137,7 @@
   if (!router_have_minimum_dir_info()) {
     int quiet = suppress_logs || from_cache ||
                 dirclient_too_idle_to_fetch_descriptors(options, now);
-    tor_log(quiet ? LOG_INFO : LOG_NOTICE, LD_DIR,
+    tor_log(LOG_INFO, LD_DIR,
         "I learned some more directory information, but not enough to "
         "build a circuit: %s", get_dir_info_status_string());
     update_all_descriptor_downloads(now);
--- tor-0.4.8.18.orig/src/feature/client/bridges.c
+++ tor-0.4.8.18/src/feature/client/bridges.c
@@ -907,7 +907,7 @@
     if (!tor_addr_is_null(&ri->ipv6_addr)) {
       tor_addr_port_t ap;
       node_get_pref_orport(node, &ap);
-      log_notice(LD_CONFIG,
+      log_info(LD_CONFIG,
                  "Bridge '%s' has both an IPv4 and an IPv6 address.  "
                  "Will prefer using its %s address (%s) based on %s.",
                  ri->nickname,
@@ -964,7 +964,7 @@
     if (!tor_addr_is_null(&rs->ipv6_addr)) {
       tor_addr_port_t ap;
       node_get_pref_orport(node, &ap);
-      log_notice(LD_CONFIG,
+      log_info(LD_CONFIG,
                  "Bridge '%s' has both an IPv4 and an IPv6 address.  "
                  "Will prefer using its %s address (%s) based on %s.",
                  rs->nickname,
@@ -1019,7 +1019,7 @@
       rewrite_node_address_for_bridge(bridge, node);
       if (tor_digest_is_zero(bridge->identity)) {
         memcpy(bridge->identity,ri->cache_info.identity_digest, DIGEST_LEN);
-        log_notice(LD_DIR, "Learned identity %s for bridge at %s:%d",
+        log_info(LD_DIR, "Learned identity %s for bridge at %s:%d",
                    hex_str(bridge->identity, DIGEST_LEN),
                    fmt_and_decorate_addr(&bridge->addr),
                    (int) bridge->port);
@@ -1028,7 +1028,7 @@
                               (const uint8_t*)ri->cache_info.identity_digest);
 
       if (desc_is_new)
-        log_notice(LD_DIR, "new bridge descriptor '%s' (%s): %s",
+        log_info(LD_DIR, "new bridge descriptor '%s' (%s): %s",
                    ri->nickname,
                    from_cache ? "cached" : "fresh", router_describe(ri));
       /* If we didn't have a reachable bridge before this one, try directory
--- tor-0.4.8.18.orig/src/feature/nodelist/nodelist.c
+++ tor-0.4.8.18/src/feature/nodelist/nodelist.c
@@ -2645,7 +2645,7 @@
 
   if (old_have_consensus_path != have_consensus_path) {
     if (have_consensus_path == CONSENSUS_PATH_INTERNAL) {
-      log_notice(LD_NET,
+      log_info(LD_NET,
                  "The current consensus has no exit nodes. "
                  "Tor can only build internal paths, "
                  "such as paths to onion services.");
@@ -2655,7 +2655,7 @@
        * the network to build exit paths, such as paths for world wide web
        * browsing (as distinct from hidden service web browsing). */
     } else if (old_have_consensus_path == CONSENSUS_PATH_INTERNAL) {
-      log_notice(LD_NET,
+      log_info(LD_NET,
                  "The current consensus contains exit nodes. "
                  "Tor can build exit and internal paths.");
     }
